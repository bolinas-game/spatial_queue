// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Drive.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Protodrive {
  public static partial class Drive
  {
    static readonly string __ServiceName = "protodrive.Drive";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protodrive.Direction> __Marshaller_protodrive_Direction = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protodrive.Direction.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protodrive.Point> __Marshaller_protodrive_Point = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protodrive.Point.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protodrive.StopInfo> __Marshaller_protodrive_StopInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protodrive.StopInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protodrive.ChangeInfo> __Marshaller_protodrive_ChangeInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protodrive.ChangeInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protodrive.BriefPoints> __Marshaller_protodrive_BriefPoints = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protodrive.BriefPoints.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protodrive.SEInfo> __Marshaller_protodrive_SEInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protodrive.SEInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protodrive.EndInfo> __Marshaller_protodrive_EndInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protodrive.EndInfo.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protodrive.Direction, global::Protodrive.Point> __Method_GetPosition = new grpc::Method<global::Protodrive.Direction, global::Protodrive.Point>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetPosition",
        __Marshaller_protodrive_Direction,
        __Marshaller_protodrive_Point);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protodrive.Direction, global::Protodrive.StopInfo> __Method_DriverStop = new grpc::Method<global::Protodrive.Direction, global::Protodrive.StopInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DriverStop",
        __Marshaller_protodrive_Direction,
        __Marshaller_protodrive_StopInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protodrive.Direction, global::Protodrive.ChangeInfo> __Method_ChangeImage = new grpc::Method<global::Protodrive.Direction, global::Protodrive.ChangeInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangeImage",
        __Marshaller_protodrive_Direction,
        __Marshaller_protodrive_ChangeInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protodrive.BriefPoints, global::Protodrive.SEInfo> __Method_SendSEPosition = new grpc::Method<global::Protodrive.BriefPoints, global::Protodrive.SEInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendSEPosition",
        __Marshaller_protodrive_BriefPoints,
        __Marshaller_protodrive_SEInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protodrive.EndInfo, global::Protodrive.EndInfo> __Method_SendEnd = new grpc::Method<global::Protodrive.EndInfo, global::Protodrive.EndInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendEnd",
        __Marshaller_protodrive_EndInfo,
        __Marshaller_protodrive_EndInfo);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Protodrive.DriveReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Drive</summary>
    [grpc::BindServiceMethod(typeof(Drive), "BindService")]
    public abstract partial class DriveBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task GetPosition(global::Protodrive.Direction request, grpc::IServerStreamWriter<global::Protodrive.Point> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protodrive.StopInfo> DriverStop(global::Protodrive.Direction request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protodrive.ChangeInfo> ChangeImage(global::Protodrive.Direction request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protodrive.SEInfo> SendSEPosition(global::Protodrive.BriefPoints request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protodrive.EndInfo> SendEnd(global::Protodrive.EndInfo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Drive</summary>
    public partial class DriveClient : grpc::ClientBase<DriveClient>
    {
      /// <summary>Creates a new client for Drive</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DriveClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Drive that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DriveClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DriveClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DriveClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Protodrive.Point> GetPosition(global::Protodrive.Direction request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPosition(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Protodrive.Point> GetPosition(global::Protodrive.Direction request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetPosition, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protodrive.StopInfo DriverStop(global::Protodrive.Direction request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DriverStop(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protodrive.StopInfo DriverStop(global::Protodrive.Direction request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DriverStop, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protodrive.StopInfo> DriverStopAsync(global::Protodrive.Direction request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DriverStopAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protodrive.StopInfo> DriverStopAsync(global::Protodrive.Direction request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DriverStop, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protodrive.ChangeInfo ChangeImage(global::Protodrive.Direction request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeImage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protodrive.ChangeInfo ChangeImage(global::Protodrive.Direction request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ChangeImage, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protodrive.ChangeInfo> ChangeImageAsync(global::Protodrive.Direction request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeImageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protodrive.ChangeInfo> ChangeImageAsync(global::Protodrive.Direction request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ChangeImage, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protodrive.SEInfo SendSEPosition(global::Protodrive.BriefPoints request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendSEPosition(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protodrive.SEInfo SendSEPosition(global::Protodrive.BriefPoints request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendSEPosition, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protodrive.SEInfo> SendSEPositionAsync(global::Protodrive.BriefPoints request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendSEPositionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protodrive.SEInfo> SendSEPositionAsync(global::Protodrive.BriefPoints request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendSEPosition, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protodrive.EndInfo SendEnd(global::Protodrive.EndInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendEnd(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protodrive.EndInfo SendEnd(global::Protodrive.EndInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendEnd, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protodrive.EndInfo> SendEndAsync(global::Protodrive.EndInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendEndAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protodrive.EndInfo> SendEndAsync(global::Protodrive.EndInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendEnd, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override DriveClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DriveClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(DriveBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetPosition, serviceImpl.GetPosition)
          .AddMethod(__Method_DriverStop, serviceImpl.DriverStop)
          .AddMethod(__Method_ChangeImage, serviceImpl.ChangeImage)
          .AddMethod(__Method_SendSEPosition, serviceImpl.SendSEPosition)
          .AddMethod(__Method_SendEnd, serviceImpl.SendEnd).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DriveBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetPosition, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Protodrive.Direction, global::Protodrive.Point>(serviceImpl.GetPosition));
      serviceBinder.AddMethod(__Method_DriverStop, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protodrive.Direction, global::Protodrive.StopInfo>(serviceImpl.DriverStop));
      serviceBinder.AddMethod(__Method_ChangeImage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protodrive.Direction, global::Protodrive.ChangeInfo>(serviceImpl.ChangeImage));
      serviceBinder.AddMethod(__Method_SendSEPosition, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protodrive.BriefPoints, global::Protodrive.SEInfo>(serviceImpl.SendSEPosition));
      serviceBinder.AddMethod(__Method_SendEnd, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protodrive.EndInfo, global::Protodrive.EndInfo>(serviceImpl.SendEnd));
    }

  }
}
#endregion
